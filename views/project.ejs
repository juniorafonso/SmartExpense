<h1 class="mb-4"><span class="fw-bold"><%= lang.project || 'Project' %>:</span> <%= project.name %></h1>

<script>
  var projectName = "<%= project.name.replace(/"/g, '\\"') %>";

  // Função para preencher e abrir o modal de add expense
  window.showAddExpenseForm = function() {
  var overlay = document.getElementById('formAddExpenseOverlay');
  var container = document.getElementById('formAddExpense');
  var form = container.querySelector('form');
  if (!form) return;

  // Limpa os campos do formulário
  form.reset();
  form.action = "/project/" + encodeURIComponent(projectName) + "/expenses";
  // Se tiver campos especiais, limpe-os manualmente:
  var currentFileContainer = document.getElementById('currentFileContainer');
  var newFileContainer = document.getElementById('newFileContainer');
  if (currentFileContainer) currentFileContainer.style.display = 'none';
  if (newFileContainer) newFileContainer.style.display = 'block';
  var deleteFileInput = form.querySelector('[name="delete_file"]');
  if (deleteFileInput) deleteFileInput.value = 'false';

  overlay.style.display = 'block';
  container.style.display = 'block';
};

  // Função para preencher e abrir o modal de edição
  window.showEditExpenseForm = function(id, name, amount, date, type, iban, notes, file, creditor_id) {
  var overlay = document.getElementById('formEditExpenseOverlay');
  var container = document.getElementById('formEditExpense');
  var form = container.querySelector('form');
  if (!form) return;

  form.action = "/project/" + encodeURIComponent(projectName) + "/expense/" + id + "/edit";
  form.querySelector('[name="id"]').value = id || '';
  form.querySelector('#edit_name').value = name || '';
  form.querySelector('#edit_amount').value = amount || '';
  form.querySelector('#edit_date').value = date ? new Date(date).toISOString().split('T')[0] : '';
  form.querySelector('#edit_type').value = type || '';
  var creditorField = form.querySelector('#edit_creditor_id');
  if (creditorField) creditorField.value = creditor_id || '';
  form.querySelector('#edit_iban').value = iban || '';
  form.querySelector('#edit_notes').value = notes || '';
  // File handling
  var currentFileContainer = document.getElementById('currentFileContainer');
  var currentFileLink = document.getElementById('currentFileLink');
  var newFileContainer = document.getElementById('newFileContainer');
  var deleteFileInput = form.querySelector('[name="delete_file"]');
  if (deleteFileInput) deleteFileInput.value = 'false';
  if (file) {
    currentFileLink.textContent = file;
    currentFileLink.href = "/uploads/" + encodeURIComponent(file);
    currentFileContainer.style.display = 'block';
    newFileContainer.style.display = 'none';
  } else {
    currentFileContainer.style.display = 'none';
    newFileContainer.style.display = 'block';
  }
  overlay.style.display = 'block';
  container.style.display = 'block';
  };

  // Função para abrir o modal de pagamento
  window.openPaymentModal = function(projectName, expenseId) {
    var paymentForm = document.getElementById('paymentForm');
    if (paymentForm) {
      paymentForm.action = "/project/" + encodeURIComponent(projectName) + "/expenses/" + expenseId + "/pay";
      var paymentSelect = document.getElementById('paymentMethodSelect');
      if (paymentSelect) paymentSelect.value = '';
      var paymentModal = new bootstrap.Modal(document.getElementById('selectPaymentModal'));
      paymentModal.show();
    }
  };

  // Função para fechar todos os modais customizados
  window.closeForms = function() {
    var overlays = document.querySelectorAll('.custom-form-overlay');
    var containers = document.querySelectorAll('.custom-form-container');
    overlays.forEach(function(el) { el.style.display = 'none'; });
    containers.forEach(function(el) { el.style.display = 'none'; });
  };

  // Função para remover arquivo existente no modal de edição
  window.removeExistingFile = function() {
    document.getElementById('currentFileContainer').style.display = 'none';
    document.getElementById('newFileContainer').style.display = 'block';
    var form = document.getElementById('formEditExpense').querySelector('form');
    form.querySelector('[name="delete_file"]').value = 'true';
  };
</script>

<% script = `
<script>
  const expensesData = ${JSON.stringify(expenses || [])};
  const lang = ${JSON.stringify(lang || {})};
  const locale = "${config.DEFAULT_LOCALE || 'en-US'}";
  const currency = "${config.DEFAULT_CURRENCY || 'USD'}";

  // FORMATTERS
  window.dateFormatter = function(value) {
    if (!value) return '-';
    try {
      const date = new Date(value);
      if (isNaN(date.getTime())) return value;
      return date.toISOString().split('T')[0];
    } catch (e) { return value; }
  };
  window.currencyFormatter = function(value) {
    if (value == null) return '-';
    try {
      return Number(value).toLocaleString(locale, { style: 'currency', currency: currency });
    } catch (e) { return value; }
  };
  window.typeFormatter = function(value) {
    if (value === 'fixed') return lang.fixed || "Fixed";
    if (value === 'one-time') return lang.one_time || "One-time";
    return value || '-';
  };
  window.statusFormatter = function(value) {
    let badgeClass = 'bg-secondary';
    let text = value;
    switch (value) {
      case 'paid':
        badgeClass = 'bg-success';
        text = lang.paid || "Paid";
        break;
      case 'unpaid':
        badgeClass = 'bg-warning text-dark';
        text = lang.unpaid || "Unpaid";
        break;
    }
    return '<span class="badge ' + badgeClass + '">' + text + '</span>';
  };
  window.fileFormatter = function(value) {
    if (value) {
      return '<a href="/uploads/' + encodeURIComponent(value) + '" target="_blank" class="text-decoration-none" title="' + value + '"><i class="bi bi-file-earmark-text-fill fs-5"></i></a>';
    }
    return '<span class="text-muted"><i class="bi bi-file-earmark-excel fs-5"></i></span>';
  };
  window.notesFormatter = function(value) {
    if (value) {
      return '<span title="' + value.replace(/"/g, '&quot;') + '"><i class="bi bi-sticky-fill fs-5 text-info"></i></span>';
    }
    return '<span class="text-muted"><i class="bi bi-sticky fs-5"></i></span>';
  };

  // ACTIONS FORMATTER E EVENTS
  window.actionsFormatter = function(value, row) {
    return (
      '<div class="dropdown">' +
        '<button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">' +
          (lang.actions || "Actions") +
        '</button>' +
        '<ul class="dropdown-menu">' +
          '<li><button type="button" class="dropdown-item edit-expense">' + (lang.edit || "Edit") + '</button></li>' +
          (row.payment_status === 'unpaid' ? '<li><button type="button" class="dropdown-item pay-expense">' + (lang.mark_paid || "Mark as paid") + '</button></li>' : '') +
          (row.payment_status === 'paid' ? '<li><button type="button" class="dropdown-item unpay-expense">' + (lang.mark_unpaid || "Mark as unpaid") + '</button></li>' : '') +
          '<li><hr class="dropdown-divider"></li>' +
          '<li><button type="button" class="dropdown-item text-danger delete-expense">' + (lang.delete || "Delete") + '</button></li>' +
        '</ul>' +
      '</div>' +
      '<form id="delete-form-' + row.id + '" action="/project/' + encodeURIComponent(projectName) + '/expenses/' + row.id + '/delete" method="POST" style="display:none;"></form>' +
      '<form id="unpay-form-' + row.id + '" action="/project/' + encodeURIComponent(projectName) + '/expenses/' + row.id + '/unpay" method="POST" style="display:none;"></form>'
    );
  };

  window.actionsEvents = {
    'click .edit-expense': function (e, value, row, index) {
      window.showEditExpenseForm(
        row.id,
        row.name,
        row.amount,
        row.date,
        row.type,
        row.iban,
        row.notes,
        row.file,
        row.creditor_id
      );
    },
    'click .pay-expense': function (e, value, row, index) {
      window.openPaymentModal(projectName, row.id);
    },
    'click .unpay-expense': function (e, value, row, index) {
      document.getElementById('unpay-form-' + row.id).submit();
    },
    'click .delete-expense': function (e, value, row, index) {
      if (confirm(lang.confirm_delete_expense || "Are you sure you want to delete this expense?")) {
        document.getElementById('delete-form-' + row.id).submit();
      }
    }
  };

  $(document).ready(function() {
    $('#expensesTable').bootstrapTable({
      data: expensesData
    });

    // Atualização dos totais
    function updateTotals() {
      let totalPaid = 0, totalUnpaid = 0, totalAmount = 0;
      expensesData.forEach(row => {
        const amount = parseFloat(row.amount) || 0;
        totalAmount += amount;
        if (row.payment_status === 'paid') totalPaid += amount;
        if (row.payment_status === 'unpaid') totalUnpaid += amount;
      });
      $('#totalPaidDisplay').text(totalPaid.toLocaleString(locale, { style: 'currency', currency: currency }));
      $('#totalUnpaidDisplay').text(totalUnpaid.toLocaleString(locale, { style: 'currency', currency: currency }));
      $('#totalAmountDisplay').text(totalAmount.toLocaleString(locale, { style: 'currency', currency: currency }));
    }
    updateTotals();
  });
</script>
` %>

<style>
  .custom-form-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1040;
    display: none;
  }
  .custom-form-container {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: white;
    border: 1px solid #dee2e6;
    border-radius: 0.3rem;
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    padding: 1.5rem;
    width: 90%;
    max-width: 600px;
    z-index: 1045;
    display: none;
    max-height: 90vh;
    overflow-y: auto;
  }
  .bootstrap-table .dropdown-menu {
    z-index: 1010;
  }

  /* --- CSS Fix for Dropdown Overflow in Bootstrap Table --- */

  /* Ensure the cell containing the dropdown allows overflow */
  #expensesTable td .dropdown {
    overflow: visible; /* Allow dropdown to go outside cell bounds */
    position: static; /* Reset position if it was changed */
  }

  /* Ensure the table wrapper allows dropdowns to overflow */
  /* This might be needed if .table-responsive is clipping */
  .table-responsive {
      overflow: visible; /* Allow content (dropdowns) to overflow */
      /* Note: This might disable horizontal scrolling if the table is wider than the container. */
      /* If horizontal scroll is needed, this fix might require a different approach. */
  }

  /* Alternative if .table-responsive fix breaks layout: */
  /* Try making the dropdown menu position fixed temporarily on open, */
  /* but this is complex and often requires JavaScript. */
  /* Let's stick to simpler CSS first. */

  /* Ensure dropdown menu has a high z-index */
  #expensesTable .dropdown-menu {
    z-index: 1050; /* Higher than most elements, adjust if needed */
  }

  /* If using sticky-header, the header might overlap. Adjust if necessary */
  .bootstrap-table .fixed-table-header {
      z-index: 1040; /* Ensure header is below dropdown */
  }
  /* --- End CSS Fix --- */
</style>

<div class="mb-3 text-start d-flex flex-wrap gap-2">
  <button class="btn btn-success" onclick="showAddExpenseForm()"><%= lang.add_expense || 'Add Expense' %></button>
  <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#editProjectModal">
    <%= lang.edit_project || 'Edit Project' %>
  </button>
  <form action="/projects/<%= project.name %>/delete" method="POST" onsubmit="return confirm('<%= lang.confirm_delete_project || 'Are you sure you want to delete this project?' %>')" style="display:inline;">
    <button type="submit" class="btn btn-outline-danger"><%= lang.delete || 'Delete' %></button>
  </form>
  <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#addFromTemplateModal">
      <%= lang.add_from_template || 'Add from Template' %>
  </button>
</div>

<h3 class="mt-4 mb-3"><%= lang.expenses || 'Expenses' %></h3>
<div id="toolbar" class="mb-2"></div>

<div class="table-responsive bg-white border rounded p-2 shadow-sm">
  <table
    id="expensesTable"
    class="table table-hover table-sm align-middle"
    data-search="true"
    data-show-columns="true"
    data-show-columns-toggle-all="true"
    data-resizable="true"
    data-pagination="true"
    data-page-size="10"
    data-page-list="[10, 25, 50, 100, All]"
    data-toolbar="#toolbar"
    data-id-field="id"
    data-sort-name="date"
    data-sort-order="desc"
    data-reorderable-columns="true"
    data-sticky-header="true"
  >
    <thead class="table-light">
      <tr>
        <th data-field="id" data-visible="false">ID</th>
        <th data-field="name" data-sortable="true"><%= lang.name || 'Name' %></th>
        <th data-field="creditor_name" data-sortable="true"><%= lang.creditor_name || 'Creditor' %></th>
        <th data-field="date" data-sortable="true" data-formatter="dateFormatter"><%= lang.date || 'Date' %></th>
        <th data-field="type" data-sortable="true" data-formatter="typeFormatter" data-align="center"><%= lang.type || 'Type' %></th>
        <th data-field="iban" data-sortable="false" data-visible="false"><%= lang.iban || 'IBAN' %></th>
        <th data-field="payment_method_name" data-sortable="true"><%= lang.payment_method || 'Payment Method' %></th>
        <th data-field="amount" data-sortable="true" data-formatter="currencyFormatter" data-align="right"><%= lang.amount || 'Amount' %></th>
        <th data-field="file" data-sortable="false" data-formatter="fileFormatter" data-align="center"><%= lang.file || 'File' %></th>
        <th data-field="notes" data-sortable="false" data-formatter="notesFormatter" data-align="center" data-visible="false"><%= lang.notes || 'Notes' %></th>
        <th data-field="payment_status" data-sortable="true" data-formatter="statusFormatter" data-align="center"><%= lang.status || 'Status' %></th>
        <th data-field="actions" data-formatter="actionsFormatter" data-events="actionsEvents" data-align="center"><%= lang.actions || 'Actions' %></th>
      </tr>
    </thead>
    <tbody>
    </tbody>
  </table>
</div>

<div class="mt-3 p-3 bg-light border rounded">
  <div class="row fw-bold">
    <div class="col text-end"><%= lang.total_paid || 'Total Paid' %>:</div>
    <div class="col-auto text-end text-success" id="totalPaidDisplay">
      <%= Number(totalPaid || 0).toLocaleString(config.DEFAULT_LOCALE || 'en-US', { style: 'currency', currency: config.DEFAULT_CURRENCY || 'USD' }) %>
    </div>
  </div>
  <div class="row fw-bold">
    <div class="col text-end"><%= lang.total_unpaid || 'Total Unpaid' %>:</div>
    <div class="col-auto text-end text-warning" id="totalUnpaidDisplay">
      <%= Number(totalUnpaid || 0).toLocaleString(config.DEFAULT_LOCALE || 'en-US', { style: 'currency', currency: config.DEFAULT_CURRENCY || 'USD' }) %>
    </div>
  </div>
  <hr class="my-1">
  <div class="row fw-bold fs-5">
    <div class="col text-end"><%= lang.total_value || 'Total Value' %>:</div>
    <div class="col-auto text-end" id="totalAmountDisplay">
      <%= Number(totalAmount || 0).toLocaleString(config.DEFAULT_LOCALE || 'en-US', { style: 'currency', currency: config.DEFAULT_CURRENCY || 'USD' }) %>
    </div>
  </div>
</div>

<div id="formAddExpenseOverlay" class="custom-form-overlay" onclick="closeForms()"></div>
<div id="formAddExpense" class="custom-form-container">
  <h5 class="mb-3"><%= lang.add_expense || 'Add Expense' %></h5>
  <form action="/project/<%= project.name %>/expenses" method="POST" enctype="multipart/form-data">
    <div class="row g-3">
        <div class="col-md-6 mb-3">
          <label for="add_name" class="form-label"><%= lang.name || 'Name' %>*</label>
          <input type="text" class="form-control" id="add_name" name="name" required>
        </div>
        <div class="col-md-6 mb-3">
          <label for="add_amount" class="form-label"><%= lang.amount || 'Amount' %>*</label>
          <input type="number" step="0.01" class="form-control" id="add_amount" name="amount" required>
        </div>
        <div class="col-md-6 mb-3">
          <label for="add_date" class="form-label"><%= lang.date || 'Date' %>*</label>
          <input type="date" class="form-control" id="add_date" name="date" required>
        </div>
        <div class="col-md-6 mb-3">
          <label for="add_type" class="form-label"><%= lang.type || 'Type' %>*</label>
          <select class="form-select" id="add_type" name="type" required>
            <option value="fixed"><%= lang.fixed || 'Fixed' %></option>
            <option value="one-time"><%= lang.one_time || 'One-time' %></option>
          </select>
        </div>
        <div class="col-md-6 mb-3">
          <label for="add_creditor_id" class="form-label"><%= lang.creditor_name || 'Creditor' %></label>
          <% if (creditors && creditors.length > 0) { %>
            <select name="creditor_id" id="add_creditor_id" class="form-select">
              <option value=""><%= lang.select_creditor || 'Select a creditor (Optional)' %></option>
              <% creditors.forEach(creditor => { %>
                <option value="<%= creditor.id %>"><%= creditor.name %></option>
              <% }) %>
            </select>
          <% } else { %>
            <p class="text-muted small"><%= lang.no_creditors_add_one || 'No creditors available. Add one in the Creditors section.' %></p>
          <% } %>
        </div>
         <div class="col-md-6 mb-3">
          <label for="add_iban" class="form-label">IBAN</label>
          <input type="text" class="form-control" id="add_iban" name="iban">
        </div>
        <div class="col-12 mb-3">
          <label for="add_notes" class="form-label"><%= lang.notes || 'Notes' %></label>
          <textarea class="form-control" id="add_notes" name="notes" rows="2"></textarea>
        </div>
        <div class="col-12 mb-3">
          <label for="add_file" class="form-label"><%= lang.file || 'File' %></label>
          <input type="file" class="form-control" id="add_file" name="file">
        </div>
    </div>
    <div class="d-flex justify-content-end gap-2 mt-3">
      <button type="button" class="btn btn-outline-secondary" onclick="closeForms()"><%= lang.cancel || 'Cancel' %></button>
      <button type="submit" class="btn btn-primary"><%= lang.save || 'Save' %></button>
    </div>
  </form>
</div>

<div id="formEditExpenseOverlay" class="custom-form-overlay" onclick="closeForms()"></div>
<div id="formEditExpense" class="custom-form-container">
  <h5 class="mb-3"><%= lang.edit || 'Edit' %> <%= lang.expense || 'Expense' %></h5>
  <form method="POST" enctype="multipart/form-data">
    <input type="hidden" name="id">
    <input type="hidden" name="delete_file" value="false">
     <div class="row g-3">
        <div class="col-md-6 mb-3">
          <label for="edit_name" class="form-label"><%= lang.name || 'Name' %>*</label>
          <input type="text" class="form-control" id="edit_name" name="name" required>
        </div>
        <div class="col-md-6 mb-3">
          <label for="edit_amount" class="form-label"><%= lang.amount || 'Amount' %>*</label>
          <input type="number" step="0.01" class="form-control" id="edit_amount" name="amount" required>
        </div>
        <div class="col-md-6 mb-3">
          <label for="edit_date" class="form-label"><%= lang.date || 'Date' %>*</label>
          <input type="date" class="form-control" id="edit_date" name="date" required>
        </div>
        <div class="col-md-6 mb-3">
          <label for="edit_type" class="form-label"><%= lang.type || 'Type' %>*</label>
          <select class="form-select" id="edit_type" name="type" required>
            <option value="fixed"><%= lang.fixed || 'Fixed' %></option>
            <option value="one-time"><%= lang.one_time || 'One-time' %></option>
          </select>
        </div>
        <div class="col-md-6 mb-3">
          <label for="edit_creditor_id" class="form-label"><%= lang.creditor_name || 'Creditor' %></label>
          <% if (creditors && creditors.length > 0) { %>
            <select name="creditor_id" id="edit_creditor_id" class="form-select">
              <option value=""><%= lang.select_creditor || 'Select a creditor (Optional)' %></option>
              <% creditors.forEach(creditor => { %>
                <option value="<%= creditor.id %>"><%= creditor.name %></option>
              <% }) %>
            </select>
          <% } else { %>
            <p class="text-muted small"><%= lang.no_creditors_add_one || 'No creditors available. Add one in the Creditors section.' %></p>
          <% } %>
        </div>
         <div class="col-md-6 mb-3">
          <label for="edit_iban" class="form-label">IBAN</label>
          <input type="text" class="form-control" id="edit_iban" name="iban">
        </div>
        <div class="col-12 mb-3">
          <label for="edit_notes" class="form-label"><%= lang.notes || 'Notes' %></label>
          <textarea class="form-control" id="edit_notes" name="notes" rows="2"></textarea>
        </div>
        <div class="col-12 mb-3" id="currentFileContainer" style="display: none;">
          <label class="form-label"><%= lang.current_file || 'Current file' %>:</label>
          <div class="d-flex justify-content-between align-items-center border p-2 rounded">
            <a id="currentFileLink" href="#" target="_blank" class="text-decoration-none text-truncate me-2"></a>
            <button type="button" class="btn btn-sm btn-outline-danger flex-shrink-0" onclick="removeExistingFile()"><%= lang.remove || 'Remove' %></button>
          </div>
        </div>
        <div class="col-12 mb-3" id="newFileContainer">
          <label for="edit_file" class="form-label"><%= lang.file || 'File' %></label>
          <input type="file" class="form-control" id="edit_file" name="file">
        </div>
    </div>
    <div class="d-flex justify-content-end gap-2 mt-3">
      <button type="button" class="btn btn-outline-secondary" onclick="closeForms()"><%= lang.cancel || 'Cancel' %></button>
      <button type="submit" class="btn btn-primary"><%= lang.save || 'Save' %></button>
    </div>
  </form>
</div>

<div class="modal fade" id="selectPaymentModal" tabindex="-1" aria-labelledby="paymentModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="paymentForm" method="POST">
        <div class="modal-header">
          <h5 class="modal-title" id="paymentModalLabel"><%= lang.select_payment_method || 'Select Payment Method' %></h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            <label for="paymentMethodSelect" class="form-label"><%= lang.payment_method || 'Payment Method' %>*</label>
            <select class="form-select" id="paymentMethodSelect" name="payment_id" required>
              <option value="" disabled selected><%= lang.please_select || 'Please select...' %></option>
              <% if (payments && payments.length > 0) { %>
                <% payments.forEach(payment => { %>
                  <option value="<%= payment.id %>"><%= payment.name %> (<%=
                    lang[payment.payment_type] ? lang[payment.payment_type] :
                    payment.payment_type === 'cash' ? 'Cash' :
                    payment.payment_type === 'bank_account' ? 'Bank Account' :
                    payment.payment_type === 'credit_card' ? 'Credit Card' :
                    payment.payment_type
                  %>)</option>
                <% }) %>
              <% } else { %>
                <option value="" disabled><%= lang.no_payment_methods || 'No payment methods available' %></option>
              <% } %>
            </select>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><%= lang.cancel || 'Cancel' %></button>
          <button type="submit" class="btn btn-success"><%= lang.confirm_payment || 'Confirm Payment' %></button>
        </div>
      </form>
    </div>
  </div>
</div>

<div class="modal fade" id="addFromTemplateModal" tabindex="-1" aria-labelledby="addFromTemplateModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form action="/project/<%= project.name %>/add-from-template" method="POST">
                <div class="modal-header">
                    <h5 class="modal-title" id="addFromTemplateModalLabel"><%= lang.add_from_template || 'Add from Template' %></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="template_id" class="form-label"><%= lang.template || 'Template' %>*</label>
                        <select class="form-select" id="template_id" name="template_id" required>
                            <option value="" disabled selected><%= lang.select_template || 'Select a template...' %></option>
                            <% if (templates && templates.length > 0) { %>
                                <% templates.forEach(template => { %>
                                    <option value="<%= template.id %>"><%= template.name %></option>
                                <% }) %>
                            <% } else { %>
                                <option value="" disabled><%= lang.no_templates_available || 'No templates available' %></option>
                            <% } %>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="template_date" class="form-label"><%= lang.date_for_expenses || 'Date for Expenses' %>*</label>
                        <input type="date" class="form-control" id="template_date" name="date" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><%= lang.cancel || 'Cancel' %></button>
                    <button type="submit" class="btn btn-primary"><%= lang.add_expenses || 'Add Expenses' %></button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="editProjectModal" tabindex="-1" aria-labelledby="editProjectModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="editProjectForm" action="/projects/edit/<%= project.id %>" method="POST">
        <div class="modal-header">
          <h5 class="modal-title" id="editProjectModalLabel"><%= lang.edit_project || 'Edit Project' %></h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <input type="hidden" name="origin" value="project_page">
          <div class="mb-3">
            <label for="edit_project_name" class="form-label"><%= lang.project_name || 'Project Name' %>*</label>
            <input type="text" class="form-control" id="edit_project_name" name="name" value="<%= project.name %>" required>
          </div>
          <div class="mb-3">
            <label for="edit_project_status" class="form-label"><%= lang.status || 'Status' %>*</label>
            <select class="form-select" id="edit_project_status" name="status" required>
              <option value="active" <%= project.status === 'active' ? 'selected' : '' %>><%= lang.active || 'Active' %></option>
              <option value="finished" <%= project.status === 'finished' ? 'selected' : '' %>><%= lang.finished || 'Finished' %></option>
            </select>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><%= lang.cancel || 'Cancel' %></button>
          <button type="submit" class="btn btn-primary"><%= lang.save_changes || 'Save Changes' %></button>
        </div>
      </form>
    </div>
  </div>
</div>

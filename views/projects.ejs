<!-- Projects Header -->
<div class="d-flex justify-content-between align-items-center mb-5">
  <div>
    <h1 class="mb-2" style="color: #495057; font-weight: 700;"><i class="bi bi-collection me-2"></i><%= lang.projects || 'Projects' %></h1>
    <p class="text-muted mb-0">Manage your expense projects and track progress.</p>
  </div>
  <a href="/projects/create" class="btn btn-modern btn-primary btn-lg">
    <i class="bi bi-plus-circle-fill me-2"></i><%= lang.create_project || 'Create Project' %>
  </a>
</div>

<!-- In Progress Projects Table -->
<div class="bg-white border rounded p-3 shadow-sm mb-4">
  <h3 class="mb-4" style="color: #007bff; font-weight: 600;">
    <i class="bi bi-play-circle-fill me-2"></i><%= lang.in_progress || 'In progress' %>
  </h3>
  <% if (activeProjects && activeProjects.length > 0) { %>
    <div class="table-responsive">
      <table class="table table-hover align-middle">
        <thead>
          <tr>
            <th style="width: 40%;"><%= lang.name || 'Name' %></th>
            <th style="width: 10%;" class="text-center"><%= lang.status || 'Status' %></th>
            <th style="width: 10%;" class="text-center"><%= lang.fixed_expenses_count || 'Fixed' %></th>
            <th style="width: 10%;" class="text-center"><%= lang.one_time_expenses_count || 'One-time' %></th>
            <th style="width: 20%;" class="text-end"><%= lang.total_expenses || 'Total Expenses' %></th>
            <th style="width: 10%;" class="text-center"><%= lang.actions || 'Actions' %></th>
          </tr>
        </thead>
        <tbody>
          <% activeProjects.forEach(project => { %>
            <tr>
              <td><%= project.name %></td>
              <td class="text-center">
                <%= lang.active || 'Active' %>
              </td>
              <td class="text-center"><%= project.fixedCount || 0 %></td>
              <td class="text-center"><%= project.oneTimeCount || 0 %></td>
              <td class="text-end">
                <%= typeof formatCurrency === 'function' ? formatCurrency(project.totalAmount || 0, config.DEFAULT_CURRENCY) : Number(project.totalAmount || 0).toLocaleString(config.DEFAULT_LOCALE || 'en-US', { style: 'currency', currency: config.DEFAULT_CURRENCY || 'USD' }) %>
              </td>
              <td class="text-center">
                <div class="dropdown">
                  <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="projectActionsActive-<%= project.id %>" data-bs-toggle="dropdown" data-bs-container="body" aria-expanded="false">
                    <%= lang.actions || 'Actions' %>
                  </button>
                  <ul class="dropdown-menu" aria-labelledby="projectActionsActive-<%= project.id %>">
                    <li><a class="dropdown-item" href="/project/<%= encodeURIComponent(project.name) %>"><%= lang.view || 'View' %></a></li>
                    <li>
                      <button type="button" class="dropdown-item edit-project-btn"
                              data-bs-toggle="modal"
                              data-bs-target="#editProjectModal"
                              data-project-id="<%= project.id %>"
                              data-project-name="<%= project.name %>"
                              data-project-status="<%= project.status %>">
                        <%= lang.edit || 'Edit' %>
                      </button>
                    </li>
                    <li><hr class="dropdown-divider"></li>
                    <li>
                      <form action="/projects/<%= project.name %>/delete" method="POST" onsubmit="return confirm('<%= lang.confirm_delete_project || 'Are you sure you want to delete this project?' %>')" style="display:inline;">
                        <button type="submit" class="dropdown-item text-danger"><%= lang.delete || 'Delete' %></button>
                      </form>
                    </li>
                  </ul>
                </div>
              </td>
            </tr>
          <% }); %>
        </tbody>
      </table>
    </div>
    
  <% } else { %>
    <div class="text-center py-5">
      <i class="bi bi-folder2-open" style="font-size: 3rem; color: #dee2e6;"></i>
      <p class="text-muted mt-3 mb-0"><%= lang.no_active_projects || 'No projects in progress.' %></p>
    </div>
  <% } %>
</div>

<!-- Finished Projects Table -->
<div class="bg-white border rounded p-3 shadow-sm mb-4">
  <h3 class="mb-4" style="color: #17a2b8; font-weight: 600;">
    <i class="bi bi-check-circle-fill me-2"></i><%= lang.finished || 'Finished' %>
  </h3>
  <% if (finishedProjects && finishedProjects.length > 0) { %>
    <div class="table-responsive">
      <table class="table table-hover align-middle">
        <thead>
          <tr>
            <th style="width: 40%;"><%= lang.name || 'Name' %></th>
            <th style="width: 10%;" class="text-center"><%= lang.status || 'Status' %></th>
            <th style="width: 10%;" class="text-center"><%= lang.fixed_expenses_count || 'Fixed' %></th>
            <th style="width: 10%;" class="text-center"><%= lang.one_time_expenses_count || 'One-time' %></th>
            <th style="width: 20%;" class="text-end"><%= lang.total_expenses || 'Total Expenses' %></th>
            <th style="width: 10%;" class="text-center"><%= lang.actions || 'Actions' %></th>
          </tr>
        </thead>
        <tbody>
          <% finishedProjects.forEach(project => { %>
            <tr>
              <td><%= project.name %></td>
              <td class="text-center">
                <%= lang.finished_sing || 'Finished' %>
              </td>
              <td class="text-center"><%= project.fixedCount || 0 %></td>
              <td class="text-center"><%= project.oneTimeCount || 0 %></td>
              <td class="text-end">
                <%= typeof formatCurrency === 'function' ? formatCurrency(project.totalAmount || 0, config.DEFAULT_CURRENCY) : Number(project.totalAmount || 0).toLocaleString(config.DEFAULT_LOCALE || 'en-US', { style: 'currency', currency: config.DEFAULT_CURRENCY || 'USD' }) %>
              </td>
              <td class="text-center">
                <div class="dropdown">
                  <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="projectActionsFinished-<%= project.id %>" data-bs-toggle="dropdown" data-bs-container="body" aria-expanded="false">
                    <%= lang.actions || 'Actions' %>
                  </button>
                  <ul class="dropdown-menu" aria-labelledby="projectActionsFinished-<%= project.id %>">
                    <li><a class="dropdown-item" href="/project/<%= encodeURIComponent(project.name) %>"><%= lang.view || 'View' %></a></li>
                    <li>
                      <button type="button" class="dropdown-item edit-project-btn"
                              data-bs-toggle="modal"
                              data-bs-target="#editProjectModal"
                              data-project-id="<%= project.id %>"
                              data-project-name="<%= project.name %>"
                              data-project-status="<%= project.status %>">
                        <%= lang.edit || 'Edit' %>
                      </button>
                    </li>
                    <li><hr class="dropdown-divider"></li>
                    <li>
                      <form action="/projects/<%= project.name %>/delete" method="POST" onsubmit="return confirm('<%= lang.confirm_delete_project || 'Are you sure you want to delete this project?' %>')" style="display:inline;">
                        <button type="submit" class="dropdown-item text-danger"><%= lang.delete || 'Delete' %></button>
                      </form>
                    </li>
                  </ul>
                </div>
              </td>
            </tr>
          <% }); %>
        </tbody>
      </table>
    </div>
    
  <% } else { %>
    <div class="text-center py-5">
      <i class="bi bi-check-circle" style="font-size: 3rem; color: #dee2e6;"></i>
      <p class="text-muted mt-3 mb-0"><%= lang.no_finished_projects || 'No finished projects.' %></p>
    </div>
  <% } %>
</div>

<!-- Include the Edit Project Modal -->
<%- include('modals/edit-project-modal') %>

<!-- JavaScript for Edit Project Modal and Dropdown Fix -->
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const editProjectModalElement = document.getElementById('editProjectModal');
    if (editProjectModalElement) {
      const editProjectForm = document.getElementById('editProjectForm');
      const editProjectIdInput = document.getElementById('edit_project_id');
      const editProjectNameInput = document.getElementById('edit_project_name');
      const editProjectStatusSelect = document.getElementById('edit_project_status');

      editProjectModalElement.addEventListener('show.bs.modal', function (event) {
        // Button that triggered the modal
        const button = event.relatedTarget;

        // Extract info from data-* attributes
        const projectId = button.getAttribute('data-project-id');
        const projectName = button.getAttribute('data-project-name');
        const projectStatus = button.getAttribute('data-project-status');

        // Update the form's action URL to use the project ID
        editProjectForm.action = `/projects/edit/${projectId}`;

        // Populate the form fields
        if(editProjectIdInput) editProjectIdInput.value = projectId;
        if(editProjectNameInput) editProjectNameInput.value = projectName;
        if(editProjectStatusSelect) editProjectStatusSelect.value = projectStatus;
      });
    }

    // Fix for dropdowns being cut off
    document.querySelectorAll('.dropdown-toggle[data-bs-container="body"]').forEach(function(dropdownToggle) {
      dropdownToggle.addEventListener('show.bs.dropdown', function (event) {
        const buttonId = event.target.id;
        if (!buttonId) return;

        const dropdownMenu = document.querySelector(`.dropdown-menu[aria-labelledby="${buttonId}"]`);
        if (!dropdownMenu) return;

        // Move dropdown to body if not already there
        if (dropdownMenu.parentElement !== document.body) {
          document.body.appendChild(dropdownMenu);
        }

        // Force position update
        setTimeout(() => {
          const dropdownInstance = bootstrap.Dropdown.getInstance(dropdownToggle);
          if (dropdownInstance) {
            dropdownInstance.update();
          }
        }, 10);
      });
    });
  });

  function formatCurrency(value, currencyCode) {
      const locale = '<%= config.DEFAULT_LOCALE || 'en-US' %>';
      const currency = currencyCode || '<%= config.DEFAULT_CURRENCY || 'USD' %>';
      try {
          return Number(value).toLocaleString(locale, { style: 'currency', currency: currency });
      } catch (e) {
          console.error("Currency formatting error:", e);
          return `${currency} ${Number(value).toFixed(2)}`;
      }
  }
</script>